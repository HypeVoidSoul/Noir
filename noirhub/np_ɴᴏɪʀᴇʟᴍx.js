// =============================================================================================================================
// GNU GENERAL PUBLIC LICENSE
// Version 3, 29 June 2007
// Copyright (C) 2007 Free Software Foundation
// Everyone is permitted to ùó∞ùóºùóΩùòÜ ùóÆùóªùó± ùó±ùó∂ùòÄùòÅùóøùó∂ùóØùòÇùòÅùó≤ verbatim copies
// of this license document, ùóØùòÇùòÅ ùó∞ùóµùóÆùóªùó¥ùó∂ùóªùó¥ ùó∂ùòÅ ùó∂ùòÄ ùóªùóºùòÅ ùóÆùóπùóπùóºùòÑùó≤ùó±.
// noirüçÄplayer
// Discord Music YouTube player
// has been licensed under GNU General Public License
// ùêÇùê®ùê©ùê≤ùê´ùê¢ùê†ùê°ùê≠ (ùêÇ) ùüêùüéùüêùüè ùóõùòÜùóΩùó≤ùó©ùóºùó∂ùó±ùó¶ùóºùòÇùóπ | ùóõùòÜùóΩùó≤ùó©ùóºùó∂ùó±ùóüùóÆùóØ | ùóõùòÜùóΩùó≤ùó©ùóºùó∂ùó±ùòÄ
// =============================================================================================================================
const { MessageEmbed } = require("discord.js");
const { splitBar } = require("string-progressbar");
const {  ô·¥è·¥õÍú∞…™x, …¥·¥è…™ Ä·¥Ñ ü·¥á·¥Ä…¥·¥á Ä } = require("../noirtem/noir_env");
module.exports = {
  name: "np",
  cooldown: 3,
  execute(noirmsg) {
    if (
      noirmsg.content.startsWith( ô·¥è·¥õÍú∞…™x + "np") &&
      noirmsg.channel.name !== "noirüçÄplayer"
    ) {
      const embedfactor = new MessageEmbed()
        .setColor(`#32CD32`)
        .setAuthor(`ùó°ùó¢ùóúùó•üçÄùó£ùóüùóîùó¨ùóòùó• ùóØùòÜ ùóõùòÜùóΩùó≤ùó©ùóºùó∂ùó±ùó¶ùóºùòÇùóπ`)
        .setThumbnail(`https://i.postimg.cc/D0rM4dhG/image.png`)
        .setDescription(`\n\n
**‚ö†Ô∏èWarning‚ö†Ô∏è** ${noirmsg.author}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

_Please use the channel **noirüçÄplayer** for any …¥·¥è…™ ÄüçÄ·¥ò ü·¥Ä è·¥á Ä commands._`);
      noirmsg.channel
        .send(embedfactor)
        .catch(console.error)
        .then((noirmsg) => {
          noirmsg.delete({
            timeout: `${…¥·¥è…™ Ä·¥Ñ ü·¥á·¥Ä…¥·¥á Ä}`,
          });
        });
      return;
    }
    if (
      noirmsg.content.startsWith( ô·¥è·¥õÍú∞…™x + "np") &&
      noirmsg.channel.name === "noirüçÄplayer"
    ) {
      const queue = noirmsg.client.queue.get(noirmsg.guild.id);
      if (!queue) {
        const embednp1 = new MessageEmbed()
          .setColor(`#32CD32`)
          .setAuthor(`ùó°ùó¢ùóúùó•üçÄùó£ùóüùóîùó¨ùóòùó• ùóØùòÜ ùóõùòÜùóΩùó≤ùó©ùóºùó∂ùó±ùó¶ùóºùòÇùóπ`)
          .setThumbnail(`https://i.postimg.cc/D0rM4dhG/image.png`)
          .setDescription(`\n\n
**‚ö†Ô∏èWarning‚ö†Ô∏è** ${noirmsg.author}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Noir is not playing anymusic yet....`);
        noirmsg.channel
          .send(embednp1)
          .catch(console.error)
          .then((noirmsg) => {
            noirmsg.delete({
              timeout: `${…¥·¥è…™ Ä·¥Ñ ü·¥á·¥Ä…¥·¥á Ä}`,
            });
          });
        return;
      }
      const song = queue.songs[0];
      const seek =
        (queue.connection.dispatcher.streamTime -
          queue.connection.dispatcher.pausedTime) /
        1000;
      const left = song.duration - seek;
      let current = new MessageEmbed()
        .setTitle("**…¥·¥è…™ ÄüçÄ·¥ò ü·¥Ä è·¥á Ä**\n*Now playing*")
        .setDescription(`${song.title}\n${song.url}`)
        .setColor(`#32CD32`)
        .setAuthor(noirmsg.client.user.username);
      if (song.duration > 0) {
        current.addField(
          `\u200b`,
          new Date(seek * 1000).toISOString().substr(11, 8) +
            `[` +
            splitBar(song.duration == 0 ? seek : song.duration, seek, 20)[0] +
            `]` +
            (song.duration == 0
              ? ` ‚óâ LIVE`
              : new Date(song.duration * 1000).toISOString().substr(11, 8)),
          false
        );
        current.setFooter(
          `‚è±Time Remaining: ${new Date(left * 1000)
            .toISOString()
            .substr(11, 8)}`
        );
      }
      return noirmsg.channel.send(current);
    }
  },
};
